<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 
	SQL 명령 보관 파일
	외부에서 접근할 수 있도록 namespace 지정할 것
 -->
 
 <mapper namespace="member">
 	
 	<!-- 회원가입 regist(등록) -->
 	<insert id="regist" parameterType="memberDto">
 		insert into member values(member_seq.nextval, null, #{id}, #{pw}, #{email}, #{phone}, 
 				#{post}, #{basic_addr}, #{detail_addr}, '일반', '고객','일반', sysdate, sysdate, sysdate, 0, '고객', #{email_address})
 	</insert>
 	
 	<!-- 아이디 중복확인 id_check(조회) -->
 	<select id="id_check" parameterType="String" resultType="memberDto">
 		select * from member where id=#{id}
 	</select>
 	
 	<!-- 비밀번호 암호화 적용 전 로그인 -->
 	<select id="login" parameterType="memberDto" resultType="memberDto">
 		select * from member where id = #{id} and pw = #{pw}
 	</select>
 	
 	<!-- 비밀번호 암호화 적용 후 로그인 -->
 	<select id="get" parameterType="String" resultType="memberDto">
 		select * from member where id = #{id}
 	</select>
 	
 	<!-- 아이디 찾기 -->
 	<select id="findId" parameterType="memberDto" resultType="memberdto">
 		select * from member where email = #{email} and email_address = #{email_address}
 	</select>
 	
 	<!-- 비밀번호 찾기 -->
 	<select id="findPw" parameterType="memberDto" resultType="memberDto">
 		select * from member where id = #{id} and email = #{email} and email_address = #{email_address}
 	</select>
 	
 	<!-- 비밀번호 변경 -->
 	<update id="changPw" parameterType="memberDto">
 		update member set pw = #{pw} where id = #{id}
 	</update>
 	
 	<!-- 회원정보 수정 전 신원확인 -->
 	<select id="take" parameterType="int" resultType="memberDto">
 		select * from member where no = #{no}
 	</select>
 	
 	<!-- 회원 정보 수정 -->
 	<update id="change" parameterType="memberDto">
 		update member set 
 		<if test="pw != null">
 		pw = #{pw},
 		</if>
 		email = #{email}, phone = #{phone}, post = #{post}, 
 				basic_addr = #{basic_addr}, detail_addr = #{detail_addr} where no = #{no}
 	</update>
 	
 	<!-- 회원 탈퇴 -->
 	<delete id="delete" parameterType="memberDto">
 		delete member where no = #{no}
 	</delete>
 	
 	
 	<!-- 회원정보 조회(회원코드로) -->
 	<select id="get_info" parameterType="int" resultType="memberDto">
 		select * from member where no=#{member_code}
 	</select>

	<!-- 찜한매장 등록 -->
 	<insert id="like" parameterType="memberDto">
 		insert into myshop values(myshop_seq.next,#{member_code},#{shop_code},sysdate)
 	</insert>
 	<!-- 찜한매장 제거 -->
 	<delete id="unlike" parameterType="memberDto">
 		delete myshop where member_code = #{member_code} and shop_code = #{shop_code}
 	</delete>
	
	<!-- 회원등급 정보 -->
	<select id="usergrade" resultType="usergradeDto">
		select * from usergrade
	</select>
	
	<!-- 회원등급 내용 변경 -->
	<update id="usergrade_edit1" parameterType="map">
		update usergrade set 
		name = #{name},
		min_order = #{min_order}
		where grade = #{grade}
	</update>
	<update id="usergrade_edit2" parameterType="map">
		update usergrade set 
		name = #{name},
		min_order = #{min_order},
		max_order = #{max_order}
		where grade = #{grade}
	</update>
	<update id="usergrade_edit3" parameterType="map">
		update usergrade set 
		name = #{name},
		max_order = #{max_order}
		where grade = #{grade}
	</update>
	
	<!-- 회원등급 변경 -->
	<update id="update" parameterType="map">
		update member set grade = #{grade} where no=#{no}
	</update>
	<!-- 회원번호 조회 -->
	<select id="member_code" resultType="memberDto">
		select no from member
	</select>
	
	<select id="myshop" resultType="myshopDto" parameterType="map">
		select * from myshop where member_code = #{member_code}
	</select>
	
	<!-- super_admin 회원전체목록 조회 -->
	<select id="get_member_list" resultType="memberDto">
		select * from member order by no desc
	</select>
	
 </mapper>
