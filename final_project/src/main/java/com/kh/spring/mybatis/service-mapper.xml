<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="service">
<!-- 자주하는 질문 목록보기 -->
	<select id="qna_list" parameterType="map" resultType="qnaDto">
		<!-- 부등호 등 태그 형식에서 사용 불가한 글자를 허용하는 지역 생성 -->
		select * from(
			select rownum rn, A.* from (
				
				select * from qna
				<if test="category != null ">
					where category=#{category}
				</if>
				order by no desc
			
			)A
		) where rn between #{start} and #{end}
	</select>
	
	<!-- 자주하는 질문 검색기능 -->
	<select id="qna_count" parameterType="string" resultType="int">
		select count(*) from qna
			<if test="category != null">
				where category=#{category} 
			</if>
	</select>
	
	<!-- 자주하는 질문 글쓰기 기능 -->
	<insert id="qna_write" parameterType="qnaDto">
		insert into qna values(
			qna_seq.nextval, 1, #{question}, #{answer}, sysdate, sysdate,
			'y', #{writer}, 'admin')
	</insert>
		
	<delete id="qna_delete" parameterType="int">
	 	delete qna where no = #{no}
	</delete>


<!-- 공지사항 목록기능-->
	<select id="notice_list" parameterType="map" resultType="noticeDto">
		<!-- 부등호 등 태그 형식에서 사용 불가한 글자를 허용하는 지역 생성 -->
		select * from(
			select rownum rn, A.* from (
				
				select * from notice
				<if test="keyword != null ">
					where title like '%' || #{keyword} || '%'
				</if>
				order by no desc
			
			)A
		) where rn between #{start} and #{end}
	</select>
	
<!-- 공지사항 검색기능-->	
	<select id="notice_count" parameterType="string" resultType="int">
		select count(*) from notice
			<if test="keyword != null">
				where title like '%' || #{keyword} || '%'
			</if>
	</select>
	
<!-- 공지사항 글 상세보기-->	
	<select id="notice_get" parameterType="int" resultType="noticeDto">
		select*from notice where no = #{no}
	</select>

<!-- 공지사항 조회수 증가-->
	<update id="notice_read" parameterType="int">
		update notice set read = read+1 where no = ${no}
	</update>
	
	
<!-- 1:1문의 목록기능-->
	<select id="ono_list" parameterType="map" resultType="onoDto">
		select * from(
			select rownum rn, A.* from (
				
				select * from OneAndOne order by no desc
			
			)A
		) where rn between #{start} and #{end}
	</select>
	
	<select id="ono_count"  resultType="int">
		select count(*) from OneAndOne
	</select>
	
<!-- 1:1 문의 글쓰기 기능 -->
	<insert id="ono_write" parameterType="onoDto">
<!-- 		insert into OneAndOne  -->
<!-- 			values( -->
<!-- 				#[no],  -->
<!-- 				#{member_code},  -->
<!-- 				#{shop_code},  -->
<!-- 				#{title},  -->
<!-- 				#{content},  -->
<!-- 				sysdate,  -->
<!-- 				sysdate,  -->
<!-- 				'답변대기',  -->
<!-- 				'고객님 빠른시일내에 답변드리겠습니다.', -->
<!-- 				'고객',  -->
<!-- 				#{category} -->
<!-- 			) -->
		insert into OneAndOne values(
			#{no}, #{member_code}, #{shop_code},
			#{title}, #{content}, sysdate, sysdate, '답변대기', '고객님 빠른시일내에 답변드리겠습니다.',
			'고객', #{category})
	</insert>
	
<!-- 1:1문의 글 상세보기	 -->
	<select id="ono_get" parameterType="int" resultType="onoDto">
		select*from OneAndOne where no = #{no}
	</select>
	
<!-- 1:1문의 파일 업로드 전 번호 받아오기	 -->
 	<select id="getno" resultType="int">
 		select oneandone_seq.nextval from dual
 	</select>
 	
 <!-- 1:1문의 파일 업로드 하기	 -->	
 	<insert id="ono_regist" parameterType="filesDto">
 		insert into files values(files_seq.nextval,
 								#{file_type},#{upload_name},#{save_name},
 								#{file_size},sysdate,sysdate)
 	</insert>
 	
<!-- 1:1문의 파일 번호 받기 	 --> 
 	 <select id="ono_getfile" parameterType="int" resultType="filesDto">
 	 	select*from files where no = #{no}
 	 </select>
 	 
 <!-- 1:1문의 파일 다운로드 하기	 --> 	
 	<select id="ono_download" parameterType="String" resultType="filesDto">
 		select * from files where save_name=#{save_name}
 	</select>

 <!-- 1:1문의 글 수정 하기	 --> 	
 	<update id="ono_edit" parameterType="onoDto">
 		update OneAndOne
 			set
 				category = #{category},
 				title = #{title},
 				content = #{content}
 			where
 				no = #{no}
 	</update>
 	
 	
</mapper>