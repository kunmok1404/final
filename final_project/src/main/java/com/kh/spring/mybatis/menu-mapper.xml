<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="menu">
	
	<!-- super_admin 메뉴관리 목록  -->
	<select id="list" resultType="menuDto">
		select * from menu order by no desc
	</select>
	
	<!-- super_admin 메뉴카테고리 조회  -->
	<select id="menu_category" parameterType="int" resultType="categoryDto">
		select * from category where no=#{menu_category} 
	</select>
	
	<!-- super_admin 메뉴관리 목록  -->
	<select id="shopList" parameterType="int" resultType="menuDto">
		select * from menu where shop_code=#{shop_code} order by no desc
	</select>
	
	<!-- 메뉴 승인버튼 클릭시 -->
	<update id="apply_menu" parameterType="int">
		update menu set apply_status='승인완료' where no=#{menu_code}
	</update>
	
	<!-- 메뉴 삭제버튼 클릭시 -->
	<delete id="delete_menu" parameterType="int">
		delete menu where no = #{menu_code}
	</delete>
	
	<!-- 메뉴 시퀀스 구하기 -->
	<select id="menu_seq" resultType="int">
		select menu_seq.nextval from dual
	</select>
	
	<!-- 메뉴카테고리 코드 구하기 -->
	<select id="getMenuCatCode" parameterType="menuRegistVO" resultType="int">
		select no from category where name=#{menu_category} and shop_code=#{shop_code}
	</select>
	
	<!-- 메뉴기본정보 등록 -->
	<insert id="registMenuInfo" parameterType="menuDto">
		insert into menu values(
			#{no}, #{shop_code}, #{menu_category}, #{name}, #{price}, 
			sysdate, sysdate, '승인대기', '판매중', null, null
		)
	</insert>
	
	<!-- 메뉴기본정보 수정 -->
	<update id="updateMenuInfo" parameterType="menuDto">
		update menu set 
			menu_category=#{menu_category}, name=#{name}, price=#{price}, 
			edit_date = sysdate 
		where no = #{no}
	</update>
	
	<!-- 메뉴테이블에 목록이미지코드 저장 -->
	<update id="updateListImg" parameterType="map">
		update menu set basic_img=#{files_seq} where no=#{menu_code}
	</update>
	
	<!-- 메뉴테이블에 상세이미지코드 저장 -->
	<update id="updateDetailImg" parameterType="map">
		update menu set Detail_img=#{files_seq} where no=#{menu_code}
	</update>
	
	<!-- 서브메뉴 테이블에 필수메뉴 등록 -->
	<insert id="registRadioSubMenu" parameterType="subMenuDto">
		insert into sub_menu values(
			sub_menu_seq.nextval, #{shop_code}, #{menu_code}, #{title}, #{name}, '필수', #{price}
		)
	</insert>
	
	<!-- 서브메뉴 테이블에 선택메뉴 등록 -->
	<insert id="registCheckSubMenu" parameterType="subMenuDto">
		insert into sub_menu values(
			sub_menu_seq.nextval, #{shop_code}, #{menu_code}, #{title}, #{name}, '선택', #{price}
		)
	</insert>
	
	<!-- 메뉴DTO구하기 -->
	<select id="getMenuInfo" parameterType="int" resultType="menuDto">
		select * from menu where no=#{menu_code}
	</select>
	
	<!-- 필수메뉴목록구하기 -->
	<select id="getSubMenuRadioInfo" parameterType="map" resultType="subMenuDto">
		select * from sub_menu 
			where shop_code=#{shop_code} and menu_code=#{menu_code} and type='필수'
	</select>
	
	<!-- 선택메뉴목록구하기 -->
	<select id="getSubMenuCheckInfo" parameterType="map" resultType="subMenuDto">
		select * from sub_menu 
			where shop_code=#{shop_code} and menu_code=#{menu_code} and type='선택'
	</select>
	
	<!-- 서브메뉴 삭제 -->
	<delete id="subMenuDelete" parameterType="map">
		delete sub_menu where shop_code=#{shop_code} and menu_code=#{menu_code}
	</delete>
	
	<!-- 
		구조화된 데이터를 불러오기 위한 ResultMap 선언
		
		(예상구조)
			MenuDetailListVO
				- MenuDetailVO
				- MenuDetailVO
				- ...
	-->
	
<!-- 	<resultMap type="menuDetailListVO" id="loader"> -->
<!-- property : 객체 속성 이름 , column : DB 결과 컬럼명 -->
<!-- 		<result property="shop_code" column="shop_code"/> -->
<!-- 		<result property="food_cat" column="food_cat"/> -->
<!-- 		<result property="menu_name" column="menu_name"/> -->
<!-- 		<result property="menu_price" column="menu_price"/> -->
		<!-- javaType : 저장소 자료형 , ofType : 구성요소 자료형 , select : 실행할 명령 ID -->
<!-- 		<collection property="list" column="shop_code"  -->
<!-- 				javaType="java.util.ArrayList" ofType="categoryDto"  -->
<!-- 				select="menuDetailLoader"></collection> -->
<!-- 	</resultMap> -->
	
<!-- 	<select id="menuDetailListLoader" parameterType="map" resultMap="loader"> -->
<!-- 		select -->
<!-- 			S.no shop_code, -->
<!-- 			F.name food_cat, -->
<!-- 		    M.name menu_name, -->
<!-- 		    M.price menu_price -->
<!-- 		from -->
<!-- 		    shop S -->
<!-- 		        inner join menu M on M.shop_code = S.no -->
<!-- 		        inner join food_category F on S.category = F.no -->
<!-- 		where S.no=1 and M.no=21 -->
<!-- 	</select> -->
	
	<!-- 자동 연결되므로 파라미터 타입이 필요 없음 -->
<!-- 	<select id="menuDetailLoader" resultType="CategoryDto"> -->
<!-- 		select * from category where shop_code = #{shop_code} -->
<!-- 	</select> -->
	<!-- 주문 갯수를 불러오는 코드 -->
	<select id="menuCount" parameterType="map" resultType="int">
		<![CDATA[
		select count(*) from menu_list	
		]]>
			<if test="sale_status =='all' or apply_status =='all'">
			<choose>
			<when test="type !=null and keyword != null and apply_status == '' and sale_status ==''">
				where ${type} like '%'||#{keyword}||'%'
			</when>
			<when test="sale_status !=null and apply_staus = '' and type =='' and keyword == ''">
				where sale_status = #{sale_status}
			</when>
			<when test="apply_status !=null and sale_staus = '' and type =='' and keyword == ''">
				where apply_status = #{apply_status}
			</when>
			<when test="apply_status !=null and sale_status =='' and type !=null and keyword != null">
				where ${type} like '%'||#{keyword}||'%' and apply_status = #{apply_status}
			</when>
			<when test="apply_status =='' and sale_status !=null and type !=null and keyword != null">
				where ${type} like '%'||#{keyword}||'%' and sale_status = #{sale_status}
			</when>
			<when test="apply_status !=null and sale_status !=null and type !=null and keyword != null">
				where ${type} like '%'||#{keyword}||'%' and sale_status = #{sale_status} and apply_status = #{apply_status}
			</when>
			<otherwise> 
			</otherwise>
		</choose>
			</if>
	</select>	
	<!-- 주문 리스트를 불러오는 코드 -->
	<select id="menuList" parameterType="map" resultType="shopMenuVo">
		<![CDATA[
		select * from 
		(select rownum rn,A.*from(
		select DISTINCT * from menu_list
		]]>
		<if test="sale_status =='all' or apply_status =='all'">
		<choose>
			<when test="type !=null and keyword != null and apply_status == '' and sale_status ==''">
				where ${type} like '%'||#{keyword}||'%'
			</when>
			<when test="sale_status !=null and apply_staus = '' and type =='' and keyword == ''">
				where sale_status = #{sale_status}
			</when>
			<when test="apply_status !=null and sale_staus = '' and type =='' and keyword == ''">
				where apply_status = #{apply_status}
			</when>
			<when test="apply_status !=null and sale_status =='' and type !=null and keyword != null">
				where ${type} like '%'||#{keyword}||'%' and apply_status = #{apply_status}
			</when>
			<when test="apply_status =='' and sale_status !=null and type !=null and keyword != null">
				where ${type} like '%'||#{keyword}||'%' and sale_status = #{sale_status}
			</when>
			<when test="apply_status !=null and sale_status !=null and type !=null and keyword != null">
				where ${type} like '%'||#{keyword}||'%' and sale_status = #{sale_status} and apply_status = #{apply_status}
			</when>
			<otherwise>
			</otherwise>
		</choose>
		</if>
		<![CDATA[
		order by no desc
		)A)where rn >= #{start} and rn <=#{end}
		]]> 
	</select>
	
	<!-- 매장 번호 불러오는 코드 -->
	<select id="getshopcode" parameterType="int" resultType="int">
		select shop_code from member where no = #{member_code}
	</select>
	<!-- 점주 메뉴 갯수를 불러오는 코드 -->
	<select id="shopmenuCount" parameterType="map" resultType="int">
		<![CDATA[
		select count(*) from menu_list where shop_code = #{shop_code}	
		]]>
			<if test="sale_status =='all' or apply_status =='all'">
			<choose>
			<when test="type !=null and keyword != null and apply_status == '' and sale_status ==''">
				and ${type} like '%'||#{keyword}||'%'
			</when>
			<when test="sale_status !=null and apply_staus = '' and type =='' and keyword == ''">
				and sale_status = #{sale_status}
			</when>
			<when test="apply_status !=null and sale_staus = '' and type =='' and keyword == ''">
				and apply_status = #{apply_status}
			</when>
			<when test="apply_status !=null and sale_status =='' and type !=null and keyword != null">
				and ${type} like '%'||#{keyword}||'%' and apply_status = #{apply_status}
			</when>
			<when test="apply_status =='' and sale_status !=null and type !=null and keyword != null">
				and ${type} like '%'||#{keyword}||'%' and sale_status = #{sale_status}
			</when>
			<when test="apply_status !=null and sale_status !=null and type !=null and keyword != null">
				and ${type} like '%'||#{keyword}||'%' and sale_status = #{sale_status} and apply_status = #{apply_status}
			</when>
			<otherwise> 
			</otherwise>
		</choose>
			</if>
	</select>	
	<select id="shopmenuList" parameterType="map" resultType="shopMenuVo">
		<![CDATA[
		select * from 
		(select rownum rn,A.*from(
		select DISTINCT * from menu_list where shop_code = #{shop_code}
		]]>
		<if test="sale_status =='all' or apply_status =='all'">
		<choose>
			<when test="type !=null and keyword != null and apply_status == '' and sale_status ==''">
				and ${type} like '%'||#{keyword}||'%'
			</when>
			<when test="sale_status !=null and apply_staus = '' and type =='' and keyword == ''">
				and sale_status = #{sale_status}
			</when>
			<when test="apply_status !=null and sale_staus = '' and type =='' and keyword == ''">
				and apply_status = #{apply_status}
			</when>
			<when test="apply_status !=null and sale_status =='' and type !=null and keyword != null">
				and ${type} like '%'||#{keyword}||'%' and apply_status = #{apply_status}
			</when>
			<when test="apply_status =='' and sale_status !=null and type !=null and keyword != null">
				and ${type} like '%'||#{keyword}||'%' and sale_status = #{sale_status}
			</when>
			<when test="apply_status !=null and sale_status !=null and type !=null and keyword != null">
				and ${type} like '%'||#{keyword}||'%' and sale_status = #{sale_status} and apply_status = #{apply_status}
			</when>
			<otherwise>
			</otherwise>
		</choose>
		</if>
		<![CDATA[
		order by no desc
		)A)where rn >= #{start} and rn <=#{end}
		]]> 
	</select>
	
	
	<select id="apply_count" parameterType="map" resultType="int">
	select count(*) from menu where shop_code = #{shop_code} and apply_status = #{apply_status}	
	</select>
	<select id="apply_all" parameterType="map" resultType="int">
	select count(*) from menu where shop_code = #{shop_code}	
	</select>
</mapper>
 
 
 
 
 
 
 
 
 